basePath: /api/v1.
definitions:
  api.InConfirmStartOfCalculating:
    properties:
      expression:
        $ref: '#/definitions/db.Expression'
    required:
    - expression
    type: object
  api.InGetExpressionByID:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  api.InGetExpressionByServer:
    properties:
      server_name:
        type: string
    required:
    - server_name
    type: object
  api.InKeepAlive:
    properties:
      expression:
        $ref: '#/definitions/db.Expression'
    required:
    - expression
    type: object
  api.InPostExpression:
    properties:
      expression:
        type: string
    required:
    - expression
    type: object
  api.InPostResult:
    properties:
      expression:
        $ref: '#/definitions/db.Expression'
    required:
    - expression
    type: object
  api.OutConfirmStartOfCalculating:
    properties:
      confirm:
        type: boolean
      message:
        type: string
    type: object
  api.OutGetAllExpressions:
    properties:
      expressions:
        items:
          $ref: '#/definitions/db.Expression'
        type: array
      message:
        type: string
    type: object
  api.OutGetExpressionByID:
    properties:
      expression:
        $ref: '#/definitions/db.Expression'
      message:
        type: string
    type: object
  api.OutGetExpressionByServer:
    properties:
      expressions:
        items:
          $ref: '#/definitions/db.Expression'
        type: array
      message:
        type: string
    type: object
  api.OutGetOperationsAndTimes:
    properties:
      data:
        additionalProperties:
          type: integer
        description: 'executions times in milliseconds: {"+": 100,...}'
        type: object
      message:
        type: string
    type: object
  api.OutGetUpdates:
    properties:
      message:
        type: string
      tasks:
        items:
          $ref: '#/definitions/db.Expression'
        type: array
    required:
    - tasks
    type: object
  api.OutPing:
    properties:
      message:
        type: string
    type: object
  api.OutPostExpression:
    properties:
      id:
        type: integer
      message:
        type: string
    type: object
  api.OutPostResult:
    properties:
      message:
        type: string
    type: object
  api.OutSetOperationsAndTimes:
    properties:
      message:
        type: string
    type: object
  db.Expression:
    properties:
      alive_experise_at:
        type: integer
      answer:
        type: number
      creation_time:
        type: string
      end_calculation_time:
        type: string
      id:
        type: integer
      logs:
        type: string
      ready:
        description: 0 - not ready, 1 - working, 2 - ready, 3 - error
        type: integer
      server_name:
        type: string
      value:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a server for the storage of expressions and their results
  title: Swagger Storage API
  version: "1.0"
paths:
  /confirmStartCalculating:
    post:
      consumes:
      - application/json
      description: Confirm start calculating for expression to coordinate work of
        calculation servers
      parameters:
      - description: Expression
        in: body
        name: expression
        required: true
        schema:
          $ref: '#/definitions/api.InConfirmStartOfCalculating'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutConfirmStartOfCalculating'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.OutConfirmStartOfCalculating'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.OutConfirmStartOfCalculating'
      summary: Confirm start calculating
      tags:
      - updates (used by calculation server)
  /expression:
    get:
      consumes:
      - application/json
      description: Get all expressions from storage
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutGetAllExpressions'
      summary: Get all expressions
      tags:
      - expression
    post:
      consumes:
      - application/json
      description: Add expression to storage
      parameters:
      - description: Expression
        in: body
        name: expression
        required: true
        schema:
          $ref: '#/definitions/api.InPostExpression'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutPostExpression'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.OutPostExpression'
      summary: Add expression
      tags:
      - expression
  /expressionById:
    get:
      consumes:
      - application/json
      description: Get expression from storage by id
      parameters:
      - description: Expression ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/api.InGetExpressionByID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutGetExpressionByID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.OutGetExpressionByID'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.OutGetExpressionByID'
      summary: Get expression by id
      tags:
      - expression
  /getExpressionByServer:
    get:
      consumes:
      - application/json
      description: Get expressions from storage by server name
      parameters:
      - description: Server name
        in: body
        name: server_name
        required: true
        schema:
          $ref: '#/definitions/api.InGetExpressionByServer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutGetExpressionByServer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.OutGetExpressionByServer'
      summary: Get expression by server
      tags:
      - expression
  /getOperationsAndTimes:
    get:
      consumes:
      - application/json
      description: 'Get operations and times for calculation as a map of operation
        and time in milliseconds, {"+": 100,...}'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutGetOperationsAndTimes'
      summary: Get operations and times
      tags:
      - operations
  /getUpdates:
    get:
      consumes:
      - application/json
      description: Get not working expressions for calculation server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutGetUpdates'
      summary: Get updates
      tags:
      - updates (used by calculation server)
  /keepAlive:
    post:
      consumes:
      - application/json
      description: Keep alive for expression to coordinate work of calculation servers
      parameters:
      - description: Expression
        in: body
        name: expression
        required: true
        schema:
          $ref: '#/definitions/api.InKeepAlive'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutPing'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.OutPing'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.OutPing'
      summary: Keep alive
      tags:
      - updates (used by calculation server)
  /ping:
    get:
      consumes:
      - application/json
      description: Check connection with server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutPing'
      summary: Ping
      tags:
      - ping
  /postOperationsAndTimes:
    post:
      consumes:
      - application/json
      description: 'Set operations and times for calculation as a map of operation
        and time in milliseconds, {"+": 100,...}'
      parameters:
      - description: Operations and times
        in: body
        name: data
        required: true
        schema:
          additionalProperties:
            type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutSetOperationsAndTimes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.OutSetOperationsAndTimes'
      summary: Set operations and times
      tags:
      - operations
  /postResult:
    post:
      consumes:
      - application/json
      description: Post result of the calculation
      parameters:
      - description: Expression
        in: body
        name: expression
        required: true
        schema:
          $ref: '#/definitions/api.InPostResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OutPostResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.OutPostResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.OutPostResult'
      summary: Post result
      tags:
      - updates (used by calculation server)
swagger: "2.0"
